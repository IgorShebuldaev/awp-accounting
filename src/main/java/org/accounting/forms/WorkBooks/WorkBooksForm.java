package org.accounting.forms.WorkBooks;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import org.accounting.database.models.Position;
import org.accounting.database.models.Worker;
import org.accounting.forms.models.MainTableModel;
import org.accounting.forms.models.WorkerTable;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;

public class WorkBooksForm extends JDialog implements ActionListener {
    private JTabbedPane tabbedPaneWorkBooks;
    private JTable tableWorkers;
    private JTable tableSuppliers;
    private JPanel panelWorkers;
    private JPanel panelSuppliers;
    private JScrollPane scrollPaneWorkers;
    private JScrollPane scrollPaneSuppliers;
    private JPanel panelWorkBooks;
    private JButton btnAddWorker;
    private JButton btnEditWorker;
    private JButton btnSaveWorker;
    private JButton btnCancelWorker;
    private JButton btnDeleteWorker;
    private JTextField textFieldWorkerFullName;
    private JSpinner spinnerWorkerDateOfBirth;
    private JComboBox<String> comboBoxWorkerPosition;
    private JButton btnShowPositionsForm;
    private JLabel labelWorkerFullName;
    private JLabel labelWorkerDateOfBirth;
    private JLabel labelWorkerPosition;
    private MainTableModel model;
    private SpinnerModel dateModel;
    private WorkerImpl worker;

    public WorkBooksForm() {
        setContentPane(panelWorkBooks);
        setSize(800, 600);
        setLocationRelativeTo(null);
        setTitle("Work Books");

        model = new WorkerTable();
        worker = new WorkerImpl();
        worker.fillTable(model);
        tableWorkers.setModel(model);
        setCurrentDateWorkerSpinner();
        addItemComboBoxPosition();

        btnAddWorker.addActionListener(this);
    }

    private void setCurrentDateWorkerSpinner() {
        Calendar calendar = Calendar.getInstance();
        Date initDate = calendar.getTime();
        calendar.add(Calendar.YEAR, -100);
        Date earliestDate = calendar.getTime();
        calendar.add(Calendar.YEAR, 200);
        Date latestDate = calendar.getTime();
        dateModel = new SpinnerDateModel(initDate, earliestDate, latestDate, Calendar.YEAR);
        spinnerWorkerDateOfBirth.setModel(dateModel);
        spinnerWorkerDateOfBirth.setEditor(new JSpinner.DateEditor(spinnerWorkerDateOfBirth, "dd.MM.yyyy"));
    }

    private void addItemComboBoxPosition() {
        comboBoxWorkerPosition.removeAllItems();
        ArrayList<Position> results = Position.getAll();
        for (Position positions : results) {
            comboBoxWorkerPosition.addItem(positions.position);
        }
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        switch (e.getActionCommand()) {
            case "btnAddWorker":
                worker.insertData(new Worker(
                        0,
                        textFieldWorkerFullName.getText(),
                        (Date) spinnerWorkerDateOfBirth.getValue(),
                        (String) comboBoxWorkerPosition.getSelectedItem()), model);
                break;
        }
    }
    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panelWorkBooks = new JPanel();
        panelWorkBooks.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        tabbedPaneWorkBooks = new JTabbedPane();
        panelWorkBooks.add(tabbedPaneWorkBooks, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(200, 200), null, 0, false));
        panelSuppliers = new JPanel();
        panelSuppliers.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        tabbedPaneWorkBooks.addTab("Suppliers", panelSuppliers);
        scrollPaneSuppliers = new JScrollPane();
        panelSuppliers.add(scrollPaneSuppliers, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        tableSuppliers = new JTable();
        scrollPaneSuppliers.setViewportView(tableSuppliers);
        panelWorkers = new JPanel();
        panelWorkers.setLayout(new GridLayoutManager(4, 5, new Insets(0, 0, 0, 0), -1, -1));
        tabbedPaneWorkBooks.addTab("Workers", panelWorkers);
        scrollPaneWorkers = new JScrollPane();
        panelWorkers.add(scrollPaneWorkers, new GridConstraints(0, 0, 1, 5, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        tableWorkers = new JTable();
        scrollPaneWorkers.setViewportView(tableWorkers);
        btnAddWorker = new JButton();
        btnAddWorker.setActionCommand("btnAddWorker");
        btnAddWorker.setText("Add");
        panelWorkers.add(btnAddWorker, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textFieldWorkerFullName = new JTextField();
        panelWorkers.add(textFieldWorkerFullName, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        spinnerWorkerDateOfBirth = new JSpinner();
        panelWorkers.add(spinnerWorkerDateOfBirth, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        comboBoxWorkerPosition = new JComboBox();
        panelWorkers.add(comboBoxWorkerPosition, new GridConstraints(2, 2, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        btnSaveWorker = new JButton();
        btnSaveWorker.setText("Save");
        panelWorkers.add(btnSaveWorker, new GridConstraints(3, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        btnEditWorker = new JButton();
        btnEditWorker.setText("Edit");
        panelWorkers.add(btnEditWorker, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        labelWorkerFullName = new JLabel();
        labelWorkerFullName.setText("Full name");
        panelWorkers.add(labelWorkerFullName, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        labelWorkerDateOfBirth = new JLabel();
        labelWorkerDateOfBirth.setText("Date of birth");
        panelWorkers.add(labelWorkerDateOfBirth, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        labelWorkerPosition = new JLabel();
        labelWorkerPosition.setText("Position");
        panelWorkers.add(labelWorkerPosition, new GridConstraints(1, 2, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        btnShowPositionsForm = new JButton();
        btnShowPositionsForm.setText(". . .");
        panelWorkers.add(btnShowPositionsForm, new GridConstraints(2, 4, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        btnDeleteWorker = new JButton();
        btnDeleteWorker.setText("Delete");
        panelWorkers.add(btnDeleteWorker, new GridConstraints(3, 4, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        btnCancelWorker = new JButton();
        btnCancelWorker.setText("Cancel");
        panelWorkers.add(btnCancelWorker, new GridConstraints(3, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panelWorkBooks;
    }
}
